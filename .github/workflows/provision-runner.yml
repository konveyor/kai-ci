name: Provision EC2 VM

on:
  workflow_call:
    inputs:
      ec2-image-id:
        description: 'The AMI ID for the EC2 instance'
        required: true
        type: string
      ec2-os-type:
        description: 'The os type of the ec2 instance (windows/linux)'
        required: true
        type: string
      ec2-instance-type:
        description: 'The instance type for the EC2 instance'
        required: true
        type: string
      aws-region:
        description: 'AWS Region'
        required: false
        type: string
        default: us-east-1
      security-group-id:
        description: 'Security group for the EC2 instance'
        required: true
        type: string
      subnet-id:
        description: 'Subnet ID for the EC2 instance'
        required: true
        type: string
    secrets:
      aws-access-key-id:
        description: 'AWS Access Key ID'
        required: true
      aws-secret-access-key:
        description: 'AWS Secret Access Key'
        required: true
      github-token:
        description: 'Personal Access Token For GH'
        required: true
    outputs:
      instance_label: 
        description: "The label of the VM that was created."
        value: ${{ jobs.provision-ec2.outputs.label }}
      ec2-instance-id: 
        description: "Instance id of the VM that was created."
        value: ${{ jobs.provision-ec2.outputs.instance_id }}

jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    outputs:
      instance_id: ${{ steps.ec2.outputs.ec2-instance-id }}
      label: ${{ steps.ec2.outputs.label }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}  # Default is us-east-1

      - name: Start EC2 GitHub runner
        id: ec2
        uses: crunchy234/ec2-github-runner@main
        with:
          mode: start
          github-token: ${{ secrets.github-token }}
          ec2-os: ${{ inputs.ec2-os-type }}
          ec2-instance-type: ${{ inputs.ec2-instance-type }}        
          ec2-image-id: ${{ inputs.ec2-image-id }}
          subnet-id: ${{ inputs.subnet-id }}
          security-group-id: ${{ inputs.security-group-id }}

      - name: Output EC2 Instance ID
        run: |
          echo "EC2 Instance ID: ${{ steps.ec2.outputs.ec2-instance-id }}"
          echo "Label : ${{ steps.ec2.outputs.label }}"

  configure-ec2:
    needs: provision-ec2
    runs-on: ${{ needs.provision-ec2.outputs.label }}
    steps:
      - name: Set Default Login to Non-Admin User (Windows Specific)
        if: ${{ inputs.ec2-os-type == 'windows' }}
        shell: powershell
        run: |
          # Enable nonadmin user and set as default login
          net user nonadmin /active:yes
          reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v DefaultUserName /t REG_SZ /d nonadmin /f
          reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v AutoAdminLogon /t REG_SZ /d 1 /f

      - name: Configure GitHub Runner Service to Run as Non-Admin User
        if: ${{ inputs.ec2-os-type == 'windows' }}
        shell: powershell
        env:
          NONADMIN_PASSWORD: ${{ secrets.nonadmin-password }}
        run: |
          # Stop the GitHub Actions Runner service
          $serviceName = Get-Service -Name 'actions.runner*' -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Name

          if (-not $serviceName) {
            Write-Error "GitHub Actions runner service not found."
            exit 1
          }

          # Stop the GitHub Actions Runner service
          Stop-Service -Name $serviceName -Force

          # Update the service to use the nonadmin user credentials
          $username = "nonadmin"
          $password = $env:NONADMIN_PASSWORD
          sc.exe config $serviceName obj= ".\$username" password= "$password"

          # Start the GitHub Actions Runner service again
          Start-Service -Name $serviceName
